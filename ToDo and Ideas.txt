I'll just put this here: After that, I'm going to work on a somewhat ambitious plan for refactoring the code to use several 
new systems I've been thinking of. After that, I will probably do some more tests on restarting and server restarts and things
of that manner. Then I have a plan for making an installer that will perform various tasks like installing latest versions, 
running pre-designated quarries (so like, load a set of parameters that you make in a file), reading quarry logs, 
and possibly doing multiple quarries/rooms/however you use its in a row (quarry, go left 60, quarry). 
So that will be cool. One of these days, I'm going to actually get around to making a new rednet program... 

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

Changelog so far:
    Made the turtle turn around more smartly when it is at the end of a layer
    Fixed empty save file checking. It works properly now.
    Made a fancy event system :3
    Used event system in turning corners and gotos and chest drops
    Added Coterminal logic to facing direction
    Hopefully forever fixed it losing its way on turns at the end of the row.
    Consolidated Mining Loops into one (Instead of main and last)
    Phased out "dispY" variable. Y is the basic y, and layers is what was y
    Made parameter section much shorter and much less complicated
    Removed -vanilla parameter
    -Default paramter now just forces no-prompt. All arguments will still be captured
    Removed fuelSafety parameter (I doubt many people used it anyway). You can still change value in file.
    Renamed "log" parameter to "logging"
    Couple of parameters now have limits. E.g. startY (1 - 256) and invCheckFreq (1 - 342 [16 slots x 64 to a stack / 3 blocks per move])
    Renamed ignoreResources to careAboutResources
    All parameters are no longer ignored if restoring
    Parameters are no longer case sensitive. "-DEFAULT" does the same thing as "-DeFaUlT"
    All Boolean Arguments now accept both "true" and "yes" (and "YeS" and "tRuuuuueeee", and "t" and "y", it only cares about the first letter)
    Made a really cool argument display and parsing system
    turnTo function now coterminals all directions
    Removed turnTo function from end of drop function
    Added manualPos parameter
    Added startDown parameter with (hopefully) appropriate changes to chest drops and the like
    Added enderChest parameter with fancy changes to drop function.    
    Fixed "-keepOpen" parameter
    Made function "drop" work more smartly when dropping items
    Fixed small issue in GPS locate
    Removed "-fuelSafety" parameter
    Updated Help section for all new use
    
Things to add for quarry version 3.3.1:
  Use "for" loops for gps location checking on successful backup read --Cosmetic Change
  Do some fuel checking for all your different variables and how they affect things
  
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

Quarry Utils:
Program that can read logs and make a configuration file to run quarry from. Precursor to Quarry Shell.
Will feature an interactive menu where you can select start quarry, make configuration file, or read logs.

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
  
Things to add for next rednet version:

Program will just register items to display on receive. It will then print them in order if there is room. Each element will be a table containing the original value, the short value, the medium value,
 the long value, and a table containing the screenX required for all sizes. Maybe also have a priority (e.g. priority 1 will always disply, then priority two will display, then priority 3 will display if there is room.
 
 Reinstate the thing where you can give commands from the rednet program. Like stop, or drop off items.
 New cool way to implement this: When new event system gets implemented, add a coroutine that adds events to the event queue based on messages received.

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
 
Plans for a tower program:
Make a program that fills in an X x Z x Until it hits ground hole. Will turn around, go up a certain number, then back one, then down until hits bottom, back up, place a block, and go up. Repeat this until gets to x. If last point will end in a down then will go to the bottom and place up. Keeps track of coordinates to go back to start.
Prolly just going to scrap this

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

Plans for a Redstone Control Station:
Basically, make an api table that only has one function. This function returns an object that has all of the necessary methods for returning values and making new indexes. In the object, each numbered value will be a table that has paramaters for:
Title, default redstone, "On" text, "Off" text, color of title, background color of title, pulse t/f, pulse duration, cable color, and a "current" value, which is just redstone true of false right now.
The actual program will handle stuff like key presses, scrolling, adjusting redstone, and updating the screen.

Cool mockup in the notebook in your backpack.

-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-

Ideas for minecraft word:
  Completely seperate the data from the visual. The data will conatain all of the lines (seperated by line breaks), and the visual will handle printing it in a formatted way for reading.
  Some day...
  
-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-
  
Ideas for TTTClick:
  Using SysPrint(once it is done), make a menu that the program will come back to once it is done with a game/ at start of game.
  :D May get to work soon :D :D :D